{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsomkuwar/Desktop/resume-projects/ecommerce-platform/frontend/src/contexts/CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  total: 0,\n  itemCount: 0\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const existingItem = state.items.find(item => item.product.id === action.payload.id);\n        if (existingItem) {\n          // Update quantity if item already exists\n          const updatedItems = state.items.map(item => item.product.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item);\n          return {\n            ...state,\n            items: updatedItems,\n            total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n            itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n          };\n        } else {\n          // Add new item\n          const newItems = [...state.items, {\n            product: action.payload,\n            quantity: 1\n          }];\n          return {\n            ...state,\n            items: newItems,\n            total: newItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n            itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0)\n          };\n        }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const updatedItems = state.items.filter(item => item.product.id !== action.payload);\n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const updatedItems = state.items.map(item => item.product.id === action.payload.productId ? {\n          ...item,\n          quantity: Math.max(0, action.payload.quantity)\n        } : item).filter(item => item.quantity > 0);\n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + item.product.price * item.quantity, 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n        };\n      }\n    case 'CLEAR_CART':\n      return initialState;\n    default:\n      return state;\n  }\n};\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const addToCart = product => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: product\n    });\n  };\n  const removeFromCart = productId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId\n    });\n  };\n  const updateQuantity = (productId, quantity) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        productId,\n        quantity\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const getItemQuantity = productId => {\n    const item = state.items.find(item => item.product.id === productId);\n    return item ? item.quantity : 0;\n  };\n  const value = {\n    state,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getItemQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","items","total","itemCount","cartReducer","state","action","type","existingItem","find","item","product","id","payload","updatedItems","map","quantity","reduce","sum","price","newItems","filter","productId","Math","max","CartContext","undefined","useCart","_s","context","Error","CartProvider","children","_s2","dispatch","addToCart","removeFromCart","updateQuantity","clearCart","getItemQuantity","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaibhavsomkuwar/Desktop/resume-projects/ecommerce-platform/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { Product } from '../types';\n\ninterface CartItem {\n  product: Product;\n  quantity: number;\n}\n\ninterface CartState {\n  items: CartItem[];\n  total: number;\n  itemCount: number;\n}\n\ntype CartAction =\n  | { type: 'ADD_ITEM'; payload: Product }\n  | { type: 'REMOVE_ITEM'; payload: number }\n  | { type: 'UPDATE_QUANTITY'; payload: { productId: number; quantity: number } }\n  | { type: 'CLEAR_CART' };\n\nconst initialState: CartState = {\n  items: [],\n  total: 0,\n  itemCount: 0,\n};\n\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      const existingItem = state.items.find(item => item.product.id === action.payload.id);\n      \n      if (existingItem) {\n        // Update quantity if item already exists\n        const updatedItems = state.items.map(item =>\n          item.product.id === action.payload.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n        \n        return {\n          ...state,\n          items: updatedItems,\n          total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n          itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0),\n        };\n      } else {\n        // Add new item\n        const newItems = [...state.items, { product: action.payload, quantity: 1 }];\n        \n        return {\n          ...state,\n          items: newItems,\n          total: newItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n          itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0),\n        };\n      }\n    }\n    \n    case 'REMOVE_ITEM': {\n      const updatedItems = state.items.filter(item => item.product.id !== action.payload);\n      \n      return {\n        ...state,\n        items: updatedItems,\n        total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0),\n      };\n    }\n    \n    case 'UPDATE_QUANTITY': {\n      const updatedItems = state.items.map(item =>\n        item.product.id === action.payload.productId\n          ? { ...item, quantity: Math.max(0, action.payload.quantity) }\n          : item\n      ).filter(item => item.quantity > 0);\n      \n      return {\n        ...state,\n        items: updatedItems,\n        total: updatedItems.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0),\n      };\n    }\n    \n    case 'CLEAR_CART':\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\ninterface CartContextType {\n  state: CartState;\n  addToCart: (product: Product) => void;\n  removeFromCart: (productId: number) => void;\n  updateQuantity: (productId: number, quantity: number) => void;\n  clearCart: () => void;\n  getItemQuantity: (productId: number) => number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  const addToCart = (product: Product) => {\n    dispatch({ type: 'ADD_ITEM', payload: product });\n  };\n\n  const removeFromCart = (productId: number) => {\n    dispatch({ type: 'REMOVE_ITEM', payload: productId });\n  };\n\n  const updateQuantity = (productId: number, quantity: number) => {\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { productId, quantity } });\n  };\n\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n\n  const getItemQuantity = (productId: number) => {\n    const item = state.items.find(item => item.product.id === productId);\n    return item ? item.quantity : 0;\n  };\n\n  const value: CartContextType = {\n    state,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getItemQuantity,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}